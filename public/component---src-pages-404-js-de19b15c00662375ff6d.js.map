{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","m","module","exports","require","default","Layout","_ref","children","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","render","data","Fragment","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","title","site","siteMetadata","meta","name","content","lang","itemprop","property","_public_static_d_755544856_json__WEBPACK_IMPORTED_MODULE_0__","propTypes","PropTypes","node","isRequired","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","Error","object","string","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-404-js-de19b15c00662375ff6d.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\n\nimport './layout.css'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Helmet\n          title={data.site.siteMetadata.title}\n          meta={[\n            { name: 'description', content: 'Sample' },\n            { name: 'keywords', content: 'sample, something' },\n          ]}\n        >\n        \n          <html lang=\"en\" />\n          <title>D3 BLACKBOX</title>\n                <meta name=\"description\" content=\"Take any D3 example you find in the wild and wrap it in a React component. Great for quick experiments and meeting deadlines. ðŸ˜›\" />\n                <meta itemprop=\"name\" content=\"D3 BLACKBOX\"></meta>\n                <meta itemprop=\"description\" content=\"Take any D3 example you find in the wild and wrap it in a React component. Great for quick experiments and meeting deadlines. ðŸ˜›\"/>\n                <meta itemprop=\"image\" content=\"https://ibb.co/mmZdaA\"/>\n\n                \n                <meta property=\"og:url\" content=\"https://shawnhosea.com\"/>\n                <meta property=\"og:type\" content=\"website\"/>\n                <meta property=\"og:title\" content=\"D3 BLACKBOX\"/>\n                <meta property=\"og:description\" content=\"Take any D3 example you find in the wild and wrap it in a React component. Great for quick experiments and meeting deadlines. ðŸ˜›\"/>\n                <meta property=\"og:image\" content=\"https://ibb.co/mmZdaA\"/>\n            \n                \n                <meta name=\"twitter:card\" content=\"summary_large_image\"></meta>\n                <meta name=\"twitter:title\" content=\"D3 BLACKBOX\"/>\n                <meta name=\"twitter:description\" content=\"Take any D3 example you find in the wild and wrap it in a React component. Great for quick experiments and meeting deadlines. ðŸ˜›\"/>\n                <meta name=\"twitter:image\" content=\"https://ibb.co/mmZdaA\"/>\n                \n                {/* ... */}\n        </Helmet>\n        \n        <div>\n          {children}\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}